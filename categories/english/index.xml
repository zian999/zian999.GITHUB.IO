<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>English on Nature and Human</title>
    <link>zian999.github.io/categories/english/</link>
    <description>Recent content in English on Nature and Human</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Aug 2019 19:29:00 -0400</lastBuildDate>
    
	<atom:link href="zian999.github.io/categories/english/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get p-values for the fixed effect terms in (g)lmer model</title>
      <link>zian999.github.io/posts/2019/lrt_pvalues_for_glmer/</link>
      <pubDate>Wed, 21 Aug 2019 19:29:00 -0400</pubDate>
      
      <guid>zian999.github.io/posts/2019/lrt_pvalues_for_glmer/</guid>
      <description>For some reason (see GLMM faq and here for more detail), the lmer function in the lme4 package doesn&amp;rsquo;t provide p-values for fixed effect terms.
If you use lme4::glmer, you&amp;rsquo;ll find that there are p-values listed in the summary of the model. However, I found two problems of them. First, those p-values are actually indicating the significance of the coefficients (i.e., whether the betas you got are different from 0 or not), not testing the effects.</description>
    </item>
    
    <item>
      <title>How to add a new lens profile to (ceased) Lightroom 6</title>
      <link>zian999.github.io/posts/2019/add_new_lens_profile_to_lr6/</link>
      <pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>zian999.github.io/posts/2019/add_new_lens_profile_to_lr6/</guid>
      <description>The Lightroom 6 was killed by Adobe in 2017 and will never get updates any more. For people (like me) who don&amp;rsquo;t want to subscribe to Adobe&amp;rsquo;s plans and are sticking with LR6, I found a way to add new lens profiles to LR6.</description>
    </item>
    
    <item>
      <title>Birding in Point Pelee National Park</title>
      <link>zian999.github.io/posts/2019/point_pelee_2019/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>zian999.github.io/posts/2019/point_pelee_2019/</guid>
      <description>Two week ago, we went to the Point Pelee National Park to watch the migrating birds (mainly warblers). It&amp;rsquo;s a wonderful experience. We saw a lot of birds that we have never seen before in local area.</description>
    </item>
    
    <item>
      <title>Markdown Guide (modified)</title>
      <link>zian999.github.io/theme_example_post/2018-08-30-markdown-guide/</link>
      <pubDate>Thu, 30 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>zian999.github.io/theme_example_post/2018-08-30-markdown-guide/</guid>
      <description>An h1 header Paragraphs are separated by a blank line.
2nd paragraph. Italic, bold, and monospace. Itemized lists look like:
 this one that one the other one  Note that &amp;mdash; not considering the asterisk &amp;mdash; the actual text content starts at 4-columns in.
 Block quotes are written like so.
They can span multiple paragraphs, if you like.
 Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex.</description>
    </item>
    
    <item>
      <title>Hacker with Bullhorn</title>
      <link>zian999.github.io/theme_example_post/hacker-with-horn/</link>
      <pubDate>Mon, 23 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>zian999.github.io/theme_example_post/hacker-with-horn/</guid>
      <description>Hacker with bullhorn: &amp;ldquo;Save your money! Accept one of our free tanks! It is invulnerable, and can drive across rocks and swamps at ninety miles an hour while getting a hundred miles to the gallon!&amp;rdquo;
Prospective station wagon buyer: &amp;ldquo;I know what you say is true&amp;hellip;but&amp;hellip;er&amp;hellip;I don&amp;rsquo;t know how to maintain a tank!&amp;rdquo;
Bullhorn: &amp;ldquo;You don&amp;rsquo;t know how to maintain a station wagon either!&amp;rdquo;
Buyer: &amp;ldquo;But this dealership has mechanics on staff.</description>
    </item>
    
    <item>
      <title>Command Line Awesomeness</title>
      <link>zian999.github.io/theme_example_post/2015-07-23-command-line-awesomeness/</link>
      <pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate>
      
      <guid>zian999.github.io/theme_example_post/2015-07-23-command-line-awesomeness/</guid>
      <description>This crud is called HTML (HyperText Markup Language) and it is basically a very simple programming language instructing your web browser how to draw a page on a screen. Anyone can learn HTML and many people do. The important thing is that no matter what splendid multimedia web pages they might represent, HTML files are just telegrams.
 When Ronald Reagan was a radio announcer, he used to call baseball games by reading the terse descriptions that trickled in over the telegraph wire and were printed out on a paper tape.</description>
    </item>
    
    <item>
      <title>Juicy Code</title>
      <link>zian999.github.io/theme_example_post/juicy-code/</link>
      <pubDate>Mon, 23 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>zian999.github.io/theme_example_post/juicy-code/</guid>
      <description>Check out this JUICY! code:
def with_value_from_database(value) self.class.from_database(name, value, type) end def with_cast_value(value) self.class.with_cast_value(name, value, type) end def with_type(type) if changed_in_place? with_value_from_user(value).with_type(type) else self.class.new(name, value_before_type_cast, type, original_attribute) end end  </description>
    </item>
    
  </channel>
</rss>